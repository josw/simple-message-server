<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.swj.msgr.member.dao.MemberDao">

	<select id="getEmailMember" resultType="Member" parameterType="String">
		select * from member where email = #{email}
	</select>

	<select id="getNicknameMember" resultType="Member" parameterType="String">
		select * from member where nickname = #{nickname}
	</select>
	
	<select id="getUuidMember" resultType="Member" parameterType="String">
		select * from member where uuid = #{uuid}
	</select>
	
	<select id="getMember" resultType="Member" parameterType="long">
		select * from member where mid = #{mid}
	</select>
	
	<insert id="insertMember" parameterType="Member" useGeneratedKeys="true" keyProperty="mid">
		insert into member (mid, uuid, aid, email, nickname, gender, byear, comment, crt_dt , upd_dt)
		values (#{mid}, #{uuid}, #{aid}, #{email}, #{nickname}, #{gender}, #{byear}, #{comment}, current_timestamp, current_timestamp)
	</insert>

	<select id="getMembers" parameterType="java.util.Map" resultType="Member">
		select * from member
		where status = 'OK'
		order by upd_dt desc
		limit #{start}, #{cnt}
	</select>
	
	<select id="getMembersIn" resultType="Member">
		select * from member
		where status = 'OK'
			and mid in 
		<foreach item="item" index="index" collection="mids"
			open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
	
	<select id="getMembersAround" parameterType="java.util.Map" resultType="Member">
		SELECT *, ( 6371 * acos( cos( radians(#{lat}) ) * cos( radians( lat ) ) * cos( radians( lng ) - radians(#{lng}) ) + sin( radians(#{lat}) ) * sin( radians( lat ) ) ) ) AS distance 
		FROM member 
		HAVING distance &lt; #{distance}
		ORDER BY distance 
		LIMIT ${start}, #{cnt}
	</select>
	
	<update id="updateMemberUpdDt" parameterType="long">
		update member set upd_dt = current_timestamp 
		where mid = #{mid}
	</update>

</mapper>